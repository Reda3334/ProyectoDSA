DROP DATABASE Projecte_DSA IF EXISTS;
CREATE DATABASE Projecte_DSA;
USE Projecte_DSA;

--USER INFORMATION TABLE
CREATE TABLE User(
	ID INTEGER NOT NULL AUTO_INCREMENT,
	username VARCHAR(255) NOT NULL,
	password VARCHAR(255) NOT NULL,
	mail VARCHAR(255) NOT NULL,
	money DOUBLE DEFAULT 50,
	puntos INTEGER DEFAULT 0,
	PRIMARY KEY(ID)
);

--OBJECT INFORMATION TABLE
CREATE TABLE StoreObject(
	ID INTEGER NOT NULL AUTO_INCREMENT,
	name VARCHAR(255) NOT NULL,
	price DOUBLE NOT NULL,
	URL VARCHAR(255),
	PRIMARY KEY(ID)
);

--INVENTORY TABLE OF ALL USERS
CREATE TABLE Inventory(
	UserID INTEGER,
	ObjectID INTEGER,
	Quantity INTEGER NOT NULL,
	FOREIGN KEY (UserID) REFERENCES User(ID),
	FOREIGN KEY (ObjectID) REFERENCES StoreObject(ID)
);

--EXISTING LEVELS TABLE
CREATE TABLE Nivel(
	ID INTEGER AUTO_INCREMENT,
	CreatorID INTEGER,
	name VARCHAR(255),
	PRIMARY KEY (ID),
	FOREIGN KEY (CreatorID) REFERENCES User(ID)
);

--ELEMENT TYPES IN A LEVEL
CREATE TABLE Elements(
	ID INTEGER AUTO_INCREMENT,
	name VARCHAR(255) NOT NULL,
	effect VARCHAR(255) NOT NULL,
	PRIMARY KEY (ID)
);

--LEVEL INFORMATION TABLE
CREATE TABLE Properties(
	NivelID INTEGER NOT NULL,
	ElementID INTEGER NOT NULL,
	X INTEGER NOT NULL,
	Y INTEGER NOT NULL,
	FOREIGN KEY (NivelID) REFERENCES Nivel(ID),
	FOREIGN KEY (ElementID) REFERENCES Elements(ID)
);

--PLAYED GAMES TABLE
CREATE TABLE Partidas(
	UserID INTEGER,
	NivelID INTEGER,
	TotalTime DATETIME NOT NULL,
	PointsGiven INTEGER NOT NULL,
	FOREIGN KEY (UserID) REFERENCES User(ID),
	FOREIGN KEY (NivelID) REFERENCES Nivel(ID)
);